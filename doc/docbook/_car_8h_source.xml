<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__car_8h_source" xml:lang="en-US">
<title>Car.h</title>
<indexterm><primary>include/Car.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//</emphasis>
2 <emphasis role="comment">//&#32;Created&#32;by&#32;Maikol&#32;Guzman&#32;on&#32;24/11/23.</emphasis>
3 <emphasis role="comment">//</emphasis>
4 
5 <emphasis role="preprocessor">#ifndef&#32;MAIN_CAR_H</emphasis>
6 <emphasis role="preprocessor">#define&#32;MAIN_CAR_H</emphasis>
7 
8 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
9 
17 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_car">Car</link>&#32;{
18 <emphasis role="keyword">private</emphasis>:&#32;<emphasis role="comment">//&#32;Encapsulation</emphasis>
19 &#32;&#32;&#32;&#32;std::string&#32;color;&#32;<emphasis role="comment">//&#32;Attribute</emphasis>
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;speed;&#32;<emphasis role="comment">//&#32;Attribute</emphasis>
21 
22 <emphasis role="keyword">public</emphasis>:
23 &#32;&#32;&#32;&#32;<link linkend="_class_car">Car</link>(std::string&#32;c,&#32;<emphasis role="keywordtype">int</emphasis>&#32;s)&#32;:&#32;color(c),&#32;speed(s)&#32;{}&#32;<emphasis role="comment">//&#32;Constructor</emphasis>
24 
25 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;accelerate()&#32;{&#32;<emphasis role="comment">//&#32;Method</emphasis>
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;speed&#32;+=&#32;10;
27 &#32;&#32;&#32;&#32;}
28 
29 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;display()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="comment">//&#32;Method&#32;showing&#32;state</emphasis>
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Car&#32;color:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;color&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;Speed:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;speed&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;km/h\n&quot;</emphasis>;
31 &#32;&#32;&#32;&#32;}
32 
33 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Getter&#32;and&#32;Setter&#32;for&#32;encapsulation&#32;and&#32;direct/indirect&#32;access</emphasis>
34 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setColor(std::string&#32;c)&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;c;
36 &#32;&#32;&#32;&#32;}
37 
38 &#32;&#32;&#32;&#32;std::string&#32;getColor()<emphasis role="keyword">&#32;const&#32;</emphasis>{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;color;
40 &#32;&#32;&#32;&#32;}
41 };
42 
43 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//MAIN_CAR_H</emphasis>
</programlisting></section>
